When would you want to use a remote repository rather than keeping all your work local?

the remote is more user friendly.
the best practice would be smth like this. Create a remote and pull to local. lots of ppl 
pull to local and start working on diff section of code. when someone finishes, they push 
the changes to the remote. Even if they haven't finished, they can pull to update their code.
But this somehow intersects with what a branch does. Well, there is also the bonus of no internet
connection to work on local. you can also merge in local and test before merging in remote.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

thats a good question. pull specifies a branch tip, and copies all reachable commits, ah but you can
checkout with no problem. so the answer is maybe because you don't necesarily are working on the
lastest commit, that maybe introduced a bug or watnot. you are maybe on another commit using checkout.
or maybe you are offline and don't have internet or pulling can merge what you were doing so yeah.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

they all seem similar right?
a branch is just a commit that does not affect the master branch. here you can make changes before
merging them, or discarting them without affecting the master branch.
a clone copies all files and metadata of a repository, which includes all branches even unreachable
commits.
a fork is like a clone but on github, used when you can push changes on the original, or when
you want to personalize the solution, ie compleatly detached to it.
